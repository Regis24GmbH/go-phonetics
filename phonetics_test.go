package gophonetics

import "testing"

type phonetic struct {
	str                          string
	phonCode                     string
	phonCodeWithoutDeduplication string
}

var phonetics = []phonetic{
	{str: "A", phonCode: "0"},
	{str: "E", phonCode: "0"},
	{str: "I", phonCode: "0"},
	{str: "J", phonCode: "0"},
	{str: "O", phonCode: "0"},
	{str: "U", phonCode: "0"},
	{str: "Y", phonCode: "0"},
	{str: "H", phonCode: ""},
	{str: "B", phonCode: "1"},
	{str: "P", phonCode: "1"},
	{str: "D", phonCode: "2"},
	{str: "T", phonCode: "2"},
	{str: "F", phonCode: "3"},
	{str: "V", phonCode: "3"},
	{str: "W", phonCode: "3"},
	{str: "G", phonCode: "4"},
	{str: "K", phonCode: "4"},
	{str: "Q", phonCode: "4"},
	{str: "C", phonCode: "8"},
	{str: "X", phonCode: "48"},
	{str: "L", phonCode: "5"},
	{str: "M", phonCode: "6"},
	{str: "N", phonCode: "6"},
	{str: "R", phonCode: "7"},
	{str: "S", phonCode: "8"},
	{str: "Z", phonCode: "8"},
	{str: "CA", phonCode: "4"},
	{str: "CH", phonCode: "4"},
	{str: "CK", phonCode: "4"},
	{str: "CL", phonCode: "45"},
	{str: "CO", phonCode: "4"},
	{str: "CQ", phonCode: "4"},
	{str: "CR", phonCode: "47"},
	{str: "CU", phonCode: "4"},
	{str: "CX", phonCode: "48"},
	{str: "CB", phonCode: "81"},
	{str: "CC", phonCode: "8"},
	{str: "CD", phonCode: "82"},
	{str: "CE", phonCode: "8"},
	{str: "CF", phonCode: "83"},
	{str: "CG", phonCode: "84"},
	{str: "CI", phonCode: "8"},
	{str: "CJ", phonCode: "8"},
	{str: "CM", phonCode: "86"},
	{str: "CN", phonCode: "86"},
	{str: "CP", phonCode: "81"},
	{str: "CS", phonCode: "8"},
	{str: "CT", phonCode: "82"},
	{str: "CV", phonCode: "83"},
	{str: "CW", phonCode: "83"},
	{str: "CY", phonCode: "8"},
	{str: "CZ", phonCode: "8"},
	{str: "SC", phonCode: "8"},
	{str: "ZC", phonCode: "8"},
	{str: "SCX", phonCode: "8"},
	{str: "ZCX", phonCode: "8"},
	{str: "BCA", phonCode: "14"},
	{str: "BCH", phonCode: "14"},
	{str: "BCK", phonCode: "14"},
	{str: "BCO", phonCode: "14"},
	{str: "BCQ", phonCode: "14"},
	{str: "BCU", phonCode: "14"},
	{str: "BCX", phonCode: "148"},
	{str: "BCB", phonCode: "181"},
	{str: "BCC", phonCode: "18"},
	{str: "BCD", phonCode: "182"},
	{str: "BCE", phonCode: "18"},
	{str: "BCF", phonCode: "183"},
	{str: "BCG", phonCode: "184"},
	{str: "BCI", phonCode: "18"},
	{str: "BCJ", phonCode: "18"},
	{str: "BCL", phonCode: "185"},
	{str: "BCM", phonCode: "186"},
	{str: "BCN", phonCode: "186"},
	{str: "BCP", phonCode: "181"},
	{str: "BCR", phonCode: "187"},
	{str: "BCS", phonCode: "18"},
	{str: "BCT", phonCode: "182"},
	{str: "BCV", phonCode: "183"},
	{str: "BCW", phonCode: "183"},
	{str: "BCY", phonCode: "18"},
	{str: "BCZ", phonCode: "18"},
	{str: "DA", phonCode: "2"},
	{str: "DB", phonCode: "21"},
	{str: "DD", phonCode: "2"},
	{str: "DE", phonCode: "2"},
	{str: "DF", phonCode: "23"},
	{str: "DF", phonCode: "23"},
	{str: "DG", phonCode: "24"},
	{str: "DH", phonCode: "2"},
	{str: "DI", phonCode: "2"},
	{str: "DJ", phonCode: "2"},
	{str: "DK", phonCode: "24"},
	{str: "DL", phonCode: "25"},
	{str: "DM", phonCode: "26"},
	{str: "DN", phonCode: "26"},
	{str: "DO", phonCode: "2"},
	{str: "DP", phonCode: "21"},
	{str: "DQ", phonCode: "24"},
	{str: "DR", phonCode: "27"},
	{str: "DT", phonCode: "2"},
	{str: "DU", phonCode: "2"},
	{str: "DV", phonCode: "23"},
	{str: "DW", phonCode: "23"},
	{str: "DX", phonCode: "248"},
	{str: "DY", phonCode: "2"},
	{str: "TA", phonCode: "2"},
	{str: "TB", phonCode: "21"},
	{str: "TD", phonCode: "2"},
	{str: "TE", phonCode: "2"},
	{str: "TF", phonCode: "23"},
	{str: "TF", phonCode: "23"},
	{str: "TG", phonCode: "24"},
	{str: "TH", phonCode: "2"},
	{str: "TI", phonCode: "2"},
	{str: "TJ", phonCode: "2"},
	{str: "TK", phonCode: "24"},
	{str: "TL", phonCode: "25"},
	{str: "TM", phonCode: "26"},
	{str: "TN", phonCode: "26"},
	{str: "TO", phonCode: "2"},
	{str: "TP", phonCode: "21"},
	{str: "TQ", phonCode: "24"},
	{str: "TR", phonCode: "27"},
	{str: "TT", phonCode: "2"},
	{str: "TU", phonCode: "2"},
	{str: "TV", phonCode: "23"},
	{str: "TW", phonCode: "23"},
	{str: "TX", phonCode: "248"},
	{str: "TY", phonCode: "2"},
	{str: "DC", phonCode: "8"},
	{str: "DS", phonCode: "8"},
	{str: "DZ", phonCode: "8"},
	{str: "TC", phonCode: "8"},
	{str: "TS", phonCode: "8"},
	{str: "TZ", phonCode: "8"},
	{str: "PA", phonCode: "1"},
	{str: "PB", phonCode: "1"},
	{str: "PC", phonCode: "18"},
	{str: "PD", phonCode: "12"},
	{str: "PE", phonCode: "1"},
	{str: "PF", phonCode: "13"},
	{str: "PG", phonCode: "14"},
	{str: "PG", phonCode: "14"},
	{str: "PI", phonCode: "1"},
	{str: "PJ", phonCode: "1"},
	{str: "PK", phonCode: "14"},
	{str: "PL", phonCode: "15"},
	{str: "PM", phonCode: "16"},
	{str: "PN", phonCode: "16"},
	{str: "PO", phonCode: "1"},
	{str: "PP", phonCode: "1"},
	{str: "PQ", phonCode: "14"},
	{str: "PR", phonCode: "17"},
	{str: "PS", phonCode: "18"},
	{str: "PT", phonCode: "12"},
	{str: "PU", phonCode: "1"},
	{str: "PV", phonCode: "13"},
	{str: "PW", phonCode: "13"},
	{str: "PX", phonCode: "148"},
	{str: "PY", phonCode: "1"},
	{str: "PZ", phonCode: "18"},
	{str: "PH", phonCode: "3"},
	{str: "AX", phonCode: "048"},
	{str: "BX", phonCode: "148"},
	{str: "DX", phonCode: "248"},
	{str: "EX", phonCode: "048"},
	{str: "FX", phonCode: "348"},
	{str: "GX", phonCode: "48"},
	{str: "HX", phonCode: "48"},
	{str: "IX", phonCode: "048"},
	{str: "JX", phonCode: "048"},
	{str: "LX", phonCode: "548"},
	{str: "MX", phonCode: "648"},
	{str: "NX", phonCode: "648"},
	{str: "OX", phonCode: "048"},
	{str: "PX", phonCode: "148"},
	{str: "RX", phonCode: "748"},
	{str: "SX", phonCode: "848"},
	{str: "TX", phonCode: "248"},
	{str: "UX", phonCode: "048"},
	{str: "VX", phonCode: "348"},
	{str: "WX", phonCode: "348"},
	{str: "XX", phonCode: "4848"},
	{str: "YX", phonCode: "048"},
	{str: "ZX", phonCode: "848"},
	{str: "CX", phonCode: "48"},
	{str: "KX", phonCode: "48"},
	{str: "QX", phonCode: "48"},
	{str: "Holger", phonCode: "0547"},
	{str: "Woltersdorf", phonCode: "35278273"},
	{str: "Müller-Lüdenscheidt", phonCode: "65752682"},
	{str: "Mustermann", phonCode: "682766"},
	{str: "Brunnen", phonCode: "1766"},
	{str: "Namenswirrwarr", phonCode: "66683737"},
	{str: "Aal", phonCode: "05"},
	{str: "Wikipedia", phonCode: "3412"},
	{str: "Breschnew", phonCode: "17863"},
	{str: "", phonCode: ""},
	{str: "Ł", phonCode: "5"},
	{str: "Ein Satz mit vielen Wörtern", phonCode: "06886235637276"},
}

func TestPhonetics(t *testing.T) {
	for _, p := range phonetics {
		code := NewPhoneticCode(p.str)

		if code != p.phonCode {
			t.Errorf("Error: expected %v, got %v",
				p.phonCode, code)
		}
	}
}

// --------------------------------------------------------------------------

type duplicate struct {
	strFull     string
	strExpected string
}

var duplicates = []duplicate{
	{strFull: "65575268822", strExpected: "65752682"},
	{strFull: "6557526882", strExpected: "65752682"},
	{strFull: "1234567899", strExpected: "123456789"},
	{strFull: "1123456789", strExpected: "123456789"},
	{strFull: "1111111111", strExpected: "1"},
}

func TestRemoveDuplicates(t *testing.T) {
	for _, dup := range duplicates {
		strRem := removeDuplicates(dup.strFull)

		if strRem != dup.strExpected {
			t.Errorf("Error: expected %v, got %v",
				dup.strExpected, strRem)
		}
	}
}
